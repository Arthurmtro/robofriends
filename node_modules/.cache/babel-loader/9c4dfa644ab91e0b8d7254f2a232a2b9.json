{"ast":null,"code":"var _jsxFileName = \"/home/arthurmtro/Documents/Udemy_Courses/---WEB --ZERO TO MASTER---/React/robofriends/src/App.js\";\nimport React, { Component } from \"react\";\nimport './index.css';\nimport './App.css';\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      return response.json();\n    }).then(rusers => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/arthurmtro/Documents/Udemy_Courses/---WEB --ZERO TO MASTER---/React/robofriends/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","rusers","users","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,GAAG;AACV;;AADU,SAkBdC,cAlBc,GAkBIC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KApBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETJ,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACC,KAHL,EAIKF,IAJL,CAIUG,MAAM,IAAI;AACZ,WAAKX,QAAL,CAAc;AAAEK,QAAAA,MAAM,EAAEO;AAAV,OAAd;AACH,KANL;AAOH;;AAMDC,EAAAA,MAAM,GAAG;AACL,UAAMC,cAAc,GAAG,KAAKV,KAAL,CAAWC,MAAX,CAAkBU,MAAlB,CAAyBC,KAAK,IAAI;AACrD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKf,KAAL,CAAWH,WAAX,CAAuBiB,WAAvB,EAAlC,CAAP;AACH,KAFsB,CAAvB;AAGA,WACA;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKpB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEgB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADA;AAOH;;AAlCuB;;AAoC5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './index.css'\nimport './App.css'\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: '',\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => {\n            return response.json();\n            })\n            .then(rusers => {\n                this.setState({ robots: users })\n            })\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        return (\n        <div className=\"tc\">\n            <h1 className=\"f1\">RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <CardList robots={filteredRobots}/>\n        </div>\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}